CHIP DecoderSegment201890722 {
    IN A, B, C, D;
    OUT c;

    PARTS:
    // First create necessary inversions
    Not(in=A, out=NotA);
    Not(in=B, out=NotB);
    Not(in=C, out=NotC);
    Not(in=D, out=NotD);

    // Create intermediate terms
    Or(a=NotA, b=NotB, out=NotAorNotB);
    Or(a=NotA, b=C, out=NotAorC);
    Or(a=B, b=NotC, out=BorNotC);
    Or(a=A, b=NotB, out=AorNotB);
    Or(a=A, b=C, out=AorC);
    Or(a=B, b=C, out=BorC);

    // Combine terms
    And(a=NotAorNotB, b=NotC, out=term1);
    And(a=NotAorNotB, b=C, out=term2);
    And(a=NotAorC, b=BorNotC, out=term3);
    And(a=AorNotB, b=NotC, out=term4);
    And(a=AorNotB, b=C, out=term5);
    And(a=AorC, b=BorC, out=term6);

    // Final combination
    Or(a=term1, b=term2, out=comb1);
    Or(a=term3, b=term4, out=comb2);
    Or(a=term5, b=term6, out=comb3);
    Or(a=comb1, b=comb2, out=comb4);
    Or(a=comb4, b=comb3, out=c);
}